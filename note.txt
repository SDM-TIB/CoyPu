Test Query

# skynet upload
scp ./worldbank/*.nt skynet:/data/home/vyas/kg_data/<dir_name>
# Sort and unq
# docker exec -it coypu_endpoint bash
# isql-v
# SELECT * FROM db.dba.load_list;
# https://vos.openlinksw.com/owiki/wiki/VOS/VirtBulkRDFLoader


# SQL QUERY
SPARQL SELECT * FROM <https://l3s.coypu.org> WHERE {?s ?p ?o.};


Select Distinct ?g
WHERE {
     Graph ?g
    {
       ?s ?p ?o.
    }
}LIMIT 100

INSERT 
{GRAPH <https://l3s.coypu.org> 
{  
 <https://tests.coypu.org/pdl/company/example3> <http://www.opengis.net/ont/geosparql#hasGeometry> _:node-b-c.
 _:node-b-c <http://www.opengis.net/ont/geosparql#asWKT> "Point".
}}

INSERT {GRAPH <https://l3s.coypu.org> {_:node18errd605x19406 <http://www.w3.org/2006/vcard/ns#postalCode> "67401" .}}

Select distinct *
where
{
Graph <http://iasis-project.eu> 
{
?s <http://www.opengis.net/ont/geosparql#hasGeometry> ?o.
?o <http://www.opengis.net/ont/geosparql#asWKT> ?o1.
Filter(isblank(?o))
}
}


Permission
grant execute on "DB.DBA.EXEC_AS" to "SPARQL";
grant execute on "DB.DBA.SPARQL_INSERT_CTOR_ACC" to "SPARQL";
grant execute on "DB.DBA.SPARQL_INS_OR_DEL_OR_MODIFY_CTOR_FIN" to "SPARQL";
grant execute on "DB.DBA.L_O_LOOK" to "SPARQL";
grant execute on "DB.DBA.SPARQL_INSERT_DICT_CONTENT" to "SPARQL";


sudo chsh -s /bin/bash <username>

import requests
import os
response = requests.post('http://dm.coypu.org:5000/api/action/resource_create',
              data={"package_id":"test10", "name":"test22"},
              headers={"X-CKAN-API-Key": "65d55933-84a8-4739-b5a8-f3d718fd8cca"},
              files=[('upload', open('/home/tibvyasa/minix_updated.csv'))])



ssh ldm_coypu -L 5000:localhost:5000
sed -n '20,40p;41q' file_name


select count (?inst) 
where {?inst a <https://schema.coypu.org/global#ICEWSEvent>} LIMIT 200


""" Python Script to execute SPARQL queries on WorldBank Endpoint 
"""


import requests
from urllib.parse import urlencode, quote
# Url to access UI interface to query worldbank dataset
url = "https://labs.tib.eu/sdm/worldbank_endpoint/sparql"
query =("""PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX time: <http://www.w3.org/2006/time#> 
PREFIX wb: <http://worldbank.org/>
PREFIX wbi: <http://worldbank.org/Indicator/>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX dbo: <http://dbpedia.org/ontology/>
SELECT DISTINCT ?wbi ?label ?identfier ?topic ?note
WHERE
{
    ?wbi a wb:Indicator.
    Optional {?wbi rdfs:label ?label}
    Optional {?wbi wb:hasTopic ?topic}
    Optional {?wbi dc:identifier ?identfier}
    Optional {?wbi skos:note ?note}
}""")
payload='default-graph-uri=&query={}'.format(quote(query))
headers = {
  'Accept': 'text/csv',
  'Content-Type': 'application/x-www-form-urlencoded'
}
response = requests.request("POST", url, headers=headers, data=payload)
print(response.text)
